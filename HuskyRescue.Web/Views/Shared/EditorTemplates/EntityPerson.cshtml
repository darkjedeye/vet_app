@using HuskyRescue.Web.Core.Infrastructure.Extensions;
@model HuskyRescue.Web.Core.ViewModel.EntityPerson

@Html.HiddenFor(model => model.ID)
@Html.HiddenFor(model => model.BaseID)
@Html.HiddenFor(model => model.EntityBase.ID)

<fieldset>
	<legend>Personal Information</legend>
	<div class="row">
		<div class="large-3 small-6 columns">
			@Html.LabelFor(model => model.FirstName)
			@Html.TextBoxFor(model => model.FirstName, new { @class = "name" })
			@Html.ValidationMessageFor(model => model.FirstName)
		</div>
		<div class="large-3 small-6 columns">
			@Html.LabelFor(model => model.LastName)
			@Html.TextBoxFor(model => model.LastName, new { @class = "name" })
			@Html.ValidationMessageFor(model => model.LastName)
		</div>
		<div class="large-2 small-6 columns">
			@Html.LabelFor(model => model.LicenseNumber)
			@Html.TextBoxFor(model => model.LicenseNumber)
			@Html.ValidationMessageFor(model => model.LicenseNumber)
		</div>
		<div class="large-4 small-6 columns"></div>
	</div>
	<div class="row">
		<div class="large-3 small-6 columns">
			@Html.LabelCheckBox(@Html.IdFor(model => model.EntityBase.IsMailable).ToString(), @Html.DisplayNameFor(model => model.EntityBase.IsMailable).ToString(), @Html.CheckBoxFor(model => model.EntityBase.IsMailable, new { @style = "display:none;" }).ToHtmlString())
		</div>
		<div class="large-3 small-6 columns">
			@Html.LabelCheckBox(@Html.IdFor(model => model.EntityBase.IsEmailable).ToString(), @Html.DisplayNameFor(model => model.EntityBase.IsEmailable).ToString(), @Html.CheckBoxFor(model => model.EntityBase.IsEmailable, new { @style = "display:none;" }).ToHtmlString())
		</div>
		<div class="large-3 small-3 columns">
			@Html.LabelCheckBox(@Html.IdFor(model => model.EntityBase.IsActive).ToString(), @Html.DisplayNameFor(model => model.EntityBase.IsActive).ToString(), @Html.CheckBoxFor(model => model.EntityBase.IsActive, new { @style = "display:none;" }).ToHtmlString())
			<p>
				@if (Model.EntityBase.IsActive == true)
	{
					@Html.DisplayFor(model => model.EntityBase.DateActive, "ShortDateTime")
	}
	else
	{
					@Html.DisplayFor(model => model.EntityBase.DateInActive, "ShortDateTime")
	}
			</p>
		</div>
		<div class="large-3 small-9 columns"></div>
	</div>
	<div class="row">
		<div class="large-12 small-12 columns">
			@Html.LabelFor(model => model.EntityBase.Comments)
			@Html.TextAreaFor(model => model.EntityBase.Comments)
		</div>
	</div>
</fieldset>

<div class="address">
	<fieldset>
		<legend>Address</legend>
		@Html.EditorFor(model => model.EntityBase.Addresses)
	</fieldset>
</div>
<div class="row">
	<div class="large-6 small-12 columns">
		<fieldset>
			<legend>Phone</legend>
			@Html.EditorFor(model => model.EntityBase.PhoneNumbers)
		</fieldset>
	</div>
	<div class="large-6 small-12 columns">
		<fieldset>
			<legend>Email</legend>
			@Html.EditorFor(model => model.EntityBase.EmailAddresses)
		</fieldset>
	</div>
</div>

